# Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить
# возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). При решении задания
# необходимо обойтись без встроенной функции возведения числа в степень. Подсказка: попробуйте решить задачу двумя
# способами. Первый — возведение в степень с помощью оператора **. Второй — более сложная реализация без оператора
# **, предусматривающая использование цикла.

# 1ое решение

# Добавим abs чтобы если будет введено отрицательное число, сделать его положительным (согласно условию задачи).
# Без abs программа так же будет корректно возводить в число в степень.
try:
    a = abs(float(input('Введите число: ')))
    b = int(input('Введите отрицательную степень числа: '))
    # Так же согласно заданию, пользователь должен вводить только отрицательное число, скорректируем его.
    # Так же можно выдать сообщение "Степень положительна" или с помощью условия попросить повторный ввод
    # while b > 0:
    #    b = int(input('Степень пложительна. Введите отрицательную степень числа: '))
    if b > 0:
        b = -b
        print(f'Введенная степень положительна и была заменана на {b}')
    print(a ** b)
except ValueError:
    print('Не вернный ввод')


# 2ое решение
def func(b, c):
    c *= 1 / a
    b += 1
    return b, c


try:
    # Добавим abs чтобы если будет введено отрицательное число, сделать его положительным (согласно условию задачи).
    # Без abs программа так же будет корректно возводить в число в степень.
    a = abs(float(input('Введите число: ')))
    b = int(input('Введите отрицательную степень числа: '))
    # Проверим на ввод и если степень положительна, скорректируем его
    if b > 0:
        b = -b
        print(f'Введенная степень положительна и была заменана на {b}')
    c = 1
    # Так как в задании указаны только отрицательные степени сделаем только данное условие
    while b < 0:
        b, c = func(b, c)
    print(c)
except ValueError:
    print('Не вернный ввод')
